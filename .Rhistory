geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = by_section, aes(x = year, y = sum, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = by_section, aes(x = year, y = sum, colour = section_number)) +
geom_line() +
facet_wrap(~Species, scales = "free_y")
by_section <- UR_data %>%  subset(Year >2001) %>%
group_by(Species, year = Year, section_number = `section number`) %>% summarize(sum = sum(Number)) %>%
subset(section_number == 1|2|3|4|5)
View(after_2001)
View(by_section)
by_section <- UR_data %>%  subset(Year >2001) %>%
group_by(Species, year = Year, section_number = `section number`) %>% summarize(sum = sum(Number))
ggplot(data = by_section, aes(x = year, y = sum, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = by_section, aes(x = year, y = sum, group=section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = by_section, aes(x = year, y = sum, group=section_number, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
library(readxl)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lattice)
UR_data <- read_excel("RangitataUpperData.xlsx", sheet = "BirdCountData")
UR_data$Species <- as.factor(UR_data$Species)
head(UR_data)
UR_data$`section number` <- as.factor(UR_data$`section number`)
by_section <- UR_data %>%  subset(Year >2001) %>%
group_by(Species, year = Year, section_number = `section number`) %>% summarize(sum = sum(Number))
mean_counts_by_year <- UR_data %>% group_by(Species, year = year(Date)) %>% reframe(mean = mean(Number))
sum_counts_by_year <- UR_data %>% group_by(Species, year = Year) %>% summarize(sum = sum(Number))
wrybill <- subset(sum_counts_by_year, Species == "Wrybill")
BFT <- subset(sum_counts_by_year, Species == "Black-fronted tern")
#mean counts over three day sampling period
ggplot(data = subset(mean_counts_by_year,Species==c("Black-fronted tern", "Wrybill")),
aes(x = date_filler, y = mean, colour = Species)) +
geom_line()
#mean counts over three day sampling period
ggplot(data = subset(mean_counts_by_year,Species==c("Black-fronted tern", "Wrybill")),
aes(x = year, y = mean, colour = Species)) +
geom_line()
#sum of counts over three day sampling period
ggplot(data = subset(sum_counts_by_year,Species==c("Black-fronted tern", "Wrybill")),
aes(x = date_filler, y = sum, colour = Species)) +
geom_line() +
geom_point()
#sum of counts over three day sampling period
ggplot(data = subset(sum_counts_by_year,Species==c("Black-fronted tern", "Wrybill")),
aes(x = year, y = sum, colour = Species)) +
geom_line() +
geom_point()
#sum of counts over three day sampling period
ggplot(data = subset(sum_counts_by_year,Species==c("Black-fronted tern", "Wrybill")),
aes(x = year, y = sum, group = Species, colour = Species)) +
geom_line() +
geom_point()
View(by_section)
View(wrybill)
View(sum_counts_by_year)
subset(sum_counts_by_year,Species==c("Black-fronted tern", "Wrybill"))
#sum of counts over three day sampling period
ggplot(data = sum_counts_by_year, aes(x = date_filler, y = sum)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
#sum of counts over three day sampling period
ggplot(data = sum_counts_by_year, aes(x = year, y = sum)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
#sum of counts over three day sampling period
ggplot(data = sum_counts_by_year, aes(x = year, y = sum, group = Species)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = subset(by_section, year > 2020), aes(x = year, y = sum, group=section_number, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
# Summary tables ---------------------------------------------------------------
overallSummary <- UR_data %>% summarise(samplingDays = n_distinct(Date), nSpecies = n_distinct(Species))
Spp_summaryTable <- UR_data %>% group_by(Species) %>% summarize(mean_count = mean(Number), mean_density = mean(Number/Hectares))
byYear <- UR_data %>% group_by(year(Date)) %>% summarize(Species = , totalObs = sum())
View(Spp_summaryTable)
#mean counts over three day sampling period
ggplot(data = subset(mean_counts_by_year,Species == "Black-fronted tern" | Species == "Wrybill")),
#mean counts over three day sampling period
ggplot(data = subset(mean_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
aes(x = year, y = mean, colour = Species)) +
geom_line()
ggplot(data = subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
aes(x = year, y = mean, colour = Species)) +
geom_line()
ggplot(data = subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
aes(x = year, y = sum, colour = Species)) +
geom_line()
subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill")
BFT_wrybill <- subset(sum_counts_by_year, Species == "Black-fronted tern")
BFT_wrybill <- subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill")
#mean counts over three day sampling period
ggplot(data = subset(mean_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
aes(x = year, y = mean, colour = Species)) +
geom_line()
ggplot(data = subset(BFT_wrybill, Species == "Black-fronted tern" | Species == "Wrybill"),
aes(x = year, y = sum, colour = Species)) +
geom_line()
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, colour = Species)) +
geom_line()
View(BFT_wrybill)
ggplot(data = BFT_wrybill,
aes(x = year, y = sum)) +
geom_line()
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, colour = Species)) +
geom_line() +
geom_point()
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, groups = Species, colour = Species)) +
geom_line() +
geom_point()
BFT_wrybill$Species <- factor(BFT_wrybill$Species)
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, groups = Species, colour = Species)) +
geom_line() +
geom_point()
BFT_wrybill$year <- ungroup(BFT_wrybill$year)
sum_counts_by_year <- UR_data %>% group_by(Species, year = as.Numeric(Year)) %>% summarize(sum = sum(Number))
sum_counts_by_year <- UR_data %>% group_by(Species, year = as.numeric(Year)) %>% summarize(sum = sum(Number))
BFT_wrybill <- subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill")
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, groups = Species, colour = Species)) +
geom_line() +
geom_point()
BFT_wrybill <- cbind(subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
subset(mean_counts_by_year$mean, Species == "Black-fronted tern" | Species == "Wrybill"))
BFT_wrybill <- left_join(subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
subset(mean_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"))
#mean counts over three day sampling period
ggplot(data = BFT_wrybill,
aes(x = year, y = mean, colour = Species)) +
geom_line()
#mean counts over three day sampling period
ggplot(data = BFT_wrybill,
aes(x = year, y = mean, colour = Species)) +
geom_line() +
(geom_point))
#mean counts over three day sampling period
ggplot(data = BFT_wrybill,
aes(x = year, y = mean, colour = Species)) +
geom_line() +
geom_point()
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, groups = Species, colour = Species)) +
geom_line() +
geom_point()
# all species ------------------------------------------------------------------
ggplot(data = sum_counts_by_year, aes(x = year, y = sum, group = Species)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = subset(by_section, year > 2020), aes(x = year, y = sum, group=section_number, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
View(UR_data)
UR_data$Year <- as.numeric(UR_data$Year)
UR_data$Species <- as.factor(UR_data$Species)
UR_data$Year <- as.numeric(UR_data$Year)
head(UR_data)
UR_data$`section number` <- as.factor(UR_data$`section number`)
by_section <- UR_data %>%  subset(Year >2001) %>%
group_by(Species, year = Year, section_number = `section number`) %>% summarize(sum = sum(Number))
mean_counts_by_year <- UR_data %>% group_by(Species, year = year(Date)) %>% reframe(mean = mean(Number))
sum_counts_by_year <- UR_data %>% group_by(Species, year = Year) %>% summarize(sum = sum(Number))
BFT_wrybill <- left_join(subset(sum_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"),
subset(mean_counts_by_year, Species == "Black-fronted tern" | Species == "Wrybill"))
# BFT and wrybill --------------------------------------------------------------
ggplot(data = BFT_wrybill,
aes(x = year, y = mean, colour = Species)) +
geom_line() +
geom_point()
ggplot(data = BFT_wrybill,
aes(x = year, y = sum, groups = Species, colour = Species)) +
geom_line() +
geom_point()
# all species ------------------------------------------------------------------
ggplot(data = sum_counts_by_year, aes(x = year, y = sum, group = Species)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
ggplot(data = subset(by_section, year > 2020), aes(x = year, y = sum, group=section_number, colour = section_number)) +
geom_line() +
geom_point() +
facet_wrap(~Species, scales = "free_y")
install.packages("simr")
library(simr)
library(lme4)
source("initial_look.R")
source("initial_look.R")
post_2020 <- subset(sum_counts_by_year, year >2020)
View(post_2020)
post_2020 <- subset(UR_data, year >2020)
View(UR_data)
post_2020 <- subset(UR_data, year > 2020)
post_2020 <- subset(UR_data, Year > 2020)
?model.offset
UR_data$section_number<- as.factor(UR_data$`section number`)
post_2020 <- subset(UR_data, Year > 2020)
post2020_mod <- glmer(Number ~ Year + (1|section_number), offset = Hectares, data = post_2020)
post2020_mod <- glmer(Number ~ Year + (1|section_number), familly = 'poisson', offset = Hectares, data = post_2020)
post2020_mod <- glmer(Number ~ Year + (1|section_number), family = "poisson", offset = Hectares, data = post_2020)
post2020_mod <- glmer(Number ~ Year + (1|section_number), family = "poisson", offset = Hectares,
data = subset(post_2020, Species == "Wrybill"))
post2020_mod <- glmer(Number ~ Year + (1|section_number), family = "poisson",
data = subset(post_2020, Species == "Wrybill"))
View(post_2020)
post2020_mod <- glmer(Number ~ Year, family = "poisson",
data = subset(post_2020, Species == "Wrybill"))
post2020_mod <- glm(Number ~ Year, family = "poisson",
data = subset(post_2020, Species == "Wrybill"))
View(post2020_mod)
summary(post2020_mod)
post2020_mod <- glmer(Number ~ Year + (1|section_number), family = "poisson",
data = subset(post_2020, Species == "Wrybill"))
post2020_mod <- glmer(Number ~ Year + (1|section_number), offset = Hectares, family = "poisson",
data = subset(post_2020, Species == "Wrybill"))
wrybill <-
post2020_mod <- glmer(Number ~ Year + (1|section_number), offset = Hectares, family = "poisson",
data = subset(post_2020, Species == "Black-fronted tern"))
wrybill <- subset(post_2020, Species == "Wrybill")
View(wrybill)
summary(post2020_mod)
post_2020 <- subset(sum_counts_by_year, Year > 2020)
post_2020 <- subset(sum_counts_by_year, year > 2020)
wrybill <- subset(post_2020, Species == "Wrybill")
post_2020 <- subset(UR_data, Year > 2020)
post_2020 <- subset(UR_data, Year > 2020)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = post_2020)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = post_2020)
post2020_mod <- glmer(Number/Hectares ~ Year + (1 | section_number),  family = "poisson",
data = post_2020)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares  family = "gaussian",
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "gaussian",
data = post_2020)
post2020_mod <- lmer(Number/Hectares ~ Year + (1 | section_number), offset = Hectares
data = post_2020)
post2020_mod <- lmer(Number/Hectares ~ Year + (1 | section_number), offset = Hectares,
data = post_2020)
View(offset)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = post_2020)
install.packages("glmmTMB")
library(glmmTMB)
post2020_mod <- glmmTMB(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = post_2020)
post2020_mod <- glmmTMB(Number ~ Year + (1 | section_number), family = "poisson",
data = post_2020)
post2020_mod <- glmmTMB(Number ~ Year, family = "poisson",
data = post_2020)
wrybill <- subset(post_2020, Species == "Wrybill")
post2020_mod <- glmmTMB(Number ~ Year, family = "poisson",
data = wrybill)
View(wrybill)
hist(wrybill$Number)
post2020_mod <- glmmTMB(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
plot(wrybill$Number ~ wrybill$Year)
wrybill$Year <- as.factor(wrybill$Year)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = wrybill)
UR_data$Species <- as.factor(UR_data$Species)
UR_data$Year <- as.factor(UR_data$Year)
head(UR_data)
UR_data$section_number<- as.factor(UR_data$`section number`)
post_2020 <- subset(UR_data, Year > 2020)
wrybill <- subset(post_2020, Species == "Wrybill")
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = wrybill)
post_2020 <- subset(UR_data, Year > 2020)
UR_data$Year <- as.numeric(UR_data$Year)
post_2020 <- subset(UR_data, Year > 2020)
wrybill <- subset(post_2020, Species == "Wrybill")
wrybill$Year <- as.factor(wrybill$Year)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = wrybill)
wrybill
View(post_2020)
post_2020 <- subset(UR_data, Year > 2020)
UR_data$Year <- as.numeric(UR_data$Year)
post_2020 <- subset(UR_data, Year > 2020)
View(UR_data)
UR_data <- read_excel("RangitataUpperData.xlsx", sheet = "BirdCountData")
UR_data$Species <- as.factor(UR_data$Species)
UR_data$Year <- as.numeric(UR_data$Year)
head(UR_data)
UR_data$section_number<- as.factor(UR_data$`section number`)
post_2020 <- subset(UR_data, Year > 2020)
wrybill <- subset(post_2020, Species == "Wrybill")
wrybill$Year <- as.factor(wrybill$Year)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), offset = Hectares, family = "poisson",
data = wrybill)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
wrybill$Year <- as.numeric(wrybill$Year)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
powerSim(post2020_mod)
rep(80,10)
range(5:50, by = 5)
params <- c(power = rep(80,10), variance = rep(50,10), effect = range(5:50))
range(5:50)
rep(5:50)
rep(5:50, by=5)
seq(5:50, by=5)
seq(10, by=5)
?seq
params <- c(power = rep(80,10), variance = rep(50,10), effect = seq(5,50, by=5))
seq(5,50, by=5)
params <- data.frame(power = rep(80,10), variance = rep(50,10), effect = seq(5,50, by=5))
View(params)
x <- seq(1,30)
g <- seq(1,5)
covariates <- expand.grid(x=x, g=g)
View(covariates)
summary(post2020_mod)
post2020_mod <- glmer(Number ~ Year , family = "poisson",
data = wrybill)
summary(post2020_mod)
fixedEffect <- c(2,-0.1)
X <- expand.grid(x=x, g=g)
View(X)
x <- seq(1,5)
g <- seq(1,5)
fixedEffect <- c(2,-0.1)
V <- 0.06279
X <- expand.grid(x=x, g=g)
makeGlmer(y ~ x + (1|g), family = "poisson", fixef = fixedEffect, VarCorr = V, data = X)
fixedEffect <- c(5,-0.1)
V <- 0.06279
X <- expand.grid(x=x, g=g)
makeGlmer(y ~ x + (1|g), family = "poisson", fixef = fixedEffect, VarCorr = V, data = X)
pilot1 <- makeGlmer(y ~ x + (1|g), family = "poisson", fixef = fixedEffect, VarCorr = V, data = X)
powerSim(pilot1)
View(wrybill)
fixedEffect <- c(2,-0.1)
V <- 0.06279
X <- expand.grid(x=x, g=g)
pilot1 <- makeGlmer(y ~ x + (1|g), family = "poisson", fixef = fixedEffect, VarCorr = V, data = X)
powerSim(pilot1)
fixedEffect <- c(0,-0.1)
V <- 0.06279
X <- expand.grid(x=x, g=g)
pilot1 <- makeGlmer(y ~ x + (1|g), family = "poisson", fixef = fixedEffect, VarCorr = V, data = X)
powerSim(pilot1)
post2020_mod <- glmer(Number ~ Year + (1 + section_number | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
plot(wrybill$Number ~ wrybill$Year)
View(post_2020)
wrybill <- subset(post_2020, Species == "Wrybill")
plot(wrybill$Number ~ wrybill$Year)
plot(log*wrybill$Number) ~ wrybill$Year)
plot(log*wrybill$Number) ~ wrybill$Year))
plot((log*wrybill$Number) ~ wrybill$Year)
plot(log(wrybill$Number) ~ wrybill$Year)
abline(a= 0.482448, b=-0.68404)
wrybill$
post2020_mod <- glmer(Number ~ Year + (1 + Species| section_number), family = "poisson",
data = post_2020)
wrybill$
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
wrybill$
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
wrybill$section_number <- factor(wrybill$section_number)
post2020_mod <- glmer(Number ~ Year + (1 | section_number), family = "poisson",
data = wrybill)
summary(post2020_mod)
yes
wrybill$centredYear <- wrybill$Year - min(wrybill$Year)
post2020_mod <- glmer(Number ~ centredYear + (1 | section_number), family = "poisson",
data = wrybill)
post2020_mod <- glmer(Number ~ centredYear + (1 | section_number), offset = Hectares, family = "poisson",
data = wrybill)
wrybill$logHectare <- log(wrybill$Hectares)
post2020_mod <- glmer(Number ~ centredYear + (1 | section_number), offset = logHectare, family = "poisson",
data = wrybill)
summary(post2020_mod)
plot(log(wrybill$Number) ~ wrybill$Year)
plot(log(wrybill$Number) ~ wrybill$centredYear)
abline(a= 0.482448, b=-0.68404)
install.packages("performance")
library(performance)
check_model(post2020_mod)
check_model(post2020_mod)
library(datawizard)
remove.packages("datawizard")
check_model(post2020_mod)
install.packages("datawizard")
library(datawizard)
library(simr)
library(lme4)
source("initial_look.R")
post_2020 <- subset(UR_data, Year > 2020)
wrybill <- subset(post_2020, Species == "Wrybill")
wrybill$section_number <- factor(wrybill$section_number)
wrybill$centredYear <- wrybill$Year - min(wrybill$Year)
wrybill$logHectare <- log(wrybill$Hectares)
post2020_mod <- glmer(Number ~ centredYear + (1 | section_number), offset = logHectare, family = "poisson",
data = wrybill)
plot(post2020_mod)
summary(post2020_mod)
model_sim <- extend(post_2020, along = centredYear, n = 25)
model_sim <- extend(post_2020, along = wrybill$centredYear, n = 25)
model_sim <- extend(post2020_mod, along = centredYear, n = 25)
model_sim <- extend(post2020_mod, along = "centredYear", n = 25)
powerSim(model_sim, fixed("centredYear", "z"), nsim = 100)
effect_sizes <- seq(1, 1, by = 0.2)
effect_sizes <- seq(-1, 1, by = 0.2)
year_range <- 5:20
results <- expand.grid(effect_sizes, year_range)
results <- expand.grid(effect=effect_sizes, years=year_range)
results$power <- NA
View(results)
wrybill$centeredYear <- wrybill$Year - min(wrybill$Year)
wrybill$logHectare <- log(wrybill$Hectares)
post2020_mod <- glmer(Number ~ centeredYear + (1 | section_number), offset = logHectare, family = "poisson",
data = wrybill)
model_sim <- extend(post2020_mod, along = "centeredYear", n = 25)
for (i in 1:nrow(results)) {
ef <- results$effect[i]
n_years <- results$years[i]
sim_model <- extend(model, along = "centredYear", n = n_years)
fixef(sim_model)["centeredYear"] <- ef
power_out <- try(powerSim(sim_model, fixed("centredYear", "z"), nsim = 100), silent = TRUE)
if (!inherits(power_out, "try-error")) {
results$power[i] <- power_out$power
} else {
results$power[i] <- NA  # Model might not converge
}
cat("Finished effect =", ef, ", years =", n_years, "\n")
}
for (i in 1:nrow(results)) {
ef <- results$effect[i]
n_years <- results$years[i]
sim_model <- extend(post2020_mod, along = "centredYear", n = n_years)
fixef(sim_model)["centeredYear"] <- ef
power_out <- try(powerSim(sim_model, fixed("centredYear", "z"), nsim = 100), silent = TRUE)
if (!inherits(power_out, "try-error")) {
results$power[i] <- power_out$power
} else {
results$power[i] <- NA  # Model might not converge
}
cat("Finished effect =", ef, ", years =", n_years, "\n")
}
View(power_out)
power_out[["text"]]
powerSim(sim_model, fixed("centredYear", "z"), nsim = 100)
power_out$x
power_out$n
for (i in 1:nrow(results)) {
ef <- results$effect[i]
n_years <- results$years[i]
sim_model <- extend(post2020_mod, along = "centredYear", n = n_years)
fixef(sim_model)["centeredYear"] <- ef
power_out <- try(powerSim(sim_model, fixed("centredYear", "z"), nsim = 100), silent = TRUE)
if (!inherits(power_out, "try-error")) {
results$power[i] <- power_out$x
} else {
results$power[i] <- NA  # Model might not converge
}
cat("Finished effect =", ef, ", years =", n_years, "\n")
}
ggplot(results, aes(x = years, y = power, color = as.factor(effect), group = effect)) +
geom_line() +
geom_point() +
labs(x = "Number of Years", y = "Power", color = "Effect Size (slope)") +
theme_minimal()
View(results)
power_out$power
power_out$x
power_out$description
power_out$pval
print(power_out)
post2020_mod
summary(post2020_mod)
?cat
